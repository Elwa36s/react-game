{"version":3,"sources":["redux/actions/actionType.js","redux/reducers/arrayTransformation.js","redux/reducers/gameLogic.js","assets/sounds/win.mp3","assets/sounds/lose.mp3","assets/sounds/keypress.mp3","redux/reducers/fieldReducer.js","redux/reducers/buttonsReducer.js","redux/reducers/reducer.js","reportWebVitals.js","components/tile/Tile.js","redux/actions/actionCreators.js","components/field/Field.js","components/buttons/buttons.js","components/stat/stat.js","assets/images/rs_school_js.svg","components/footer/footer.js","components/app/app.js","index.js"],"names":["UP","DOWN","LEFT","RIGHT","INIT_GAME","CHECK_WIN","CHECK_LOSE","CHECK_SCORE","LOAD_LAST_GAME","SETTINGS","SHOW_SCORE","MUTE_SOUND","RESET_BEST_SCORE","makeLines","array","lines","forEach","value","index","lineIndex","Math","floor","push","rotate","arr","times","check","rotatedArr","map","item","idx","row","reverse","sum","result","summedArr","i","j","filter","val","length","isNaN","numb","unshiftZeros","unshift","findEmpties","emptyIndex","putRandomNumber","possibleIndexes","getRandomInt","max","random","currentNumb","checkPossibleMove","defaultArray","changedArray","initGame","emptyField","tiles","calculateScore","reduce","isWin","isLose","winGame","Audio","winSound","loseGame","loseSound","moveGame","moveSound","initialState","currentScore","bestScore","moves","win","lose","top10","gameStop","muted","fieldReducer","state","action","concat","arrLined","type","num","payload","back","swappedArr","flat","play","wasWin","bestResults","score","lastLose","loadedState","JSON","parse","localStorage","getItem","isMuted","settingsIsOpen","buttonsReducer","modal","reducers","combineReducers","field","buttons","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Tile","props","className","mapDispatchToProps","moveUp","moveDown","moveLeft","moveRight","loadGame","connect","useEffect","document","addEventListener","e","eventHandler","removeEventListener","saveGame","event","keyCode","elem","getElementById","element","requestFullScreen","mozRequestFullScreen","webkitRequestFullScreen","currentState","stringify","setItem","id","tile","settings","mute","leaderBoard","resetScore","onClick","sort","a","b","slice","record","checkForLose","checkForWin","calcScore","Footer","href","src","logo","alt","App","store","createStore","gameReducers","compose","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f9524c05.chunk.js","sourcesContent":["export const UP = 'UP';\nexport const DOWN = 'DOWN';\nexport const LEFT = 'LEFT';\nexport const RIGHT = 'RIGHT';\nexport const INIT_GAME = 'INIT_GAME';\nexport const CHECK_WIN = 'CHECK_WIN';\nexport const CHECK_LOSE = 'CHECK_LOSE';\nexport const CHECK_SCORE = 'CHECK_SCORE';\nexport const LOAD_LAST_GAME = 'LOAD_LAST_GAME';\nexport const SETTINGS = 'SETTINGS';\nexport const SHOW_SCORE = 'SHOW_SCORE';\nexport const MUTE_SOUND = 'MUTE_SOUND';\nexport const RESET_BEST_SCORE = 'RESET_BEST_SCORE';\nexport const FULLSCREEN = 'FULLSCREEN';","function makeLines(array){\n    let lines = [];\n    array.forEach((value, index) => {\n        let lineIndex = Math.floor(index / 4);\n        lines[lineIndex] = lines[lineIndex] || [];\n        lines[lineIndex].push(value);\n    });\n    return lines;\n}\n  \nfunction rotate(arr, times = 1){\n    const check = times - 1;\n    const rotatedArr = arr[0].map((item, idx) => arr.map((row) => row[idx]).reverse());\n    return check === 0 ? rotatedArr : rotate(rotatedArr, check);\n}\n  \nfunction sum(arr){\n    const result = [];\n    const summedArr = [];\n    for(let i = 0; i < 4; i++){\n    let row = arr[i];\n    row = row.filter(val => (val !== 0));\n        for(let j = row.length; j >= 0; j--){\n            if(row[j] === row[j-1]){\n                if(!isNaN(row[j-1])){\n            row[j] += row[j-1] + 1;\n            row[j-1] = 0\n            row = row.filter(val => (val !== 0));\n            }}\n        }\n        row = row.map((numb)=>(numb % 2 === 1) ? numb -= 1 : numb);\n    summedArr.push(row);\n    }\n    for (let i = 0; i < 4; i++){\n        let row = summedArr[i];\n        result.push(unshiftZeros(row));\n    }\n    return result\n}\n\nfunction unshiftZeros(array){\n    if (array.length < 4) array.unshift(0);\n    return array.length === 4 ? array : unshiftZeros(array);\n}\n\nfunction findEmpties(array){\n    let emptyIndex = [];\n    array.forEach((value, index) => {if(value === 0){emptyIndex.push(index)}})\n    return emptyIndex;\n}\n\n\nfunction putRandomNumber(array){\n    const possibleIndexes = findEmpties(array);\n    const randomNumb = [2, 4, 2, 2, 2, 2, 2, 2, 4, 2];\n    \n    function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));          \n    }\n\n    const insertIndex = getRandomInt(10),\n    currentNumb = randomNumb[insertIndex],\n    possiblePlace = getRandomInt(possibleIndexes.length),\n    currentPlace = possibleIndexes[possiblePlace];\n    array[currentPlace] = currentNumb;\n    return array;\n}\n\nfunction checkPossibleMove(defaultArray, changedArray){\n    for (let i = 0; i < defaultArray.length; i++){\n    if (defaultArray[i] !== changedArray[i]) return true\n    }\n}\n    export {sum, rotate, findEmpties, makeLines, checkPossibleMove, putRandomNumber};","import {putRandomNumber, findEmpties} from './arrayTransformation'\r\n\r\nfunction initGame(){\r\n    const emptyField = [];\r\n            for(let i = 0; i <16; i++){\r\n                emptyField.push(0);\r\n            }\r\n    let tiles = putRandomNumber(emptyField);\r\n    tiles = putRandomNumber(tiles);\r\n    return tiles;\r\n}\r\n\r\n\r\nfunction calculateScore(array){\r\n    return array.reduce((sum, value) => sum += value, 0);\r\n}\r\n\r\nfunction isWin(array){\r\n    let result = array.filter((value) => value === 2048);\r\n    return result.length === 0 ? false : true;\r\n}\r\n\r\nfunction isLose(array){\r\n    const empty = findEmpties(array);\r\n    if (empty.length === 0){\r\n        const result = [];\r\n        for(let i = 0; i < array.length; i++){\r\n           if (array[i] === array[i+1]){\r\n               if (i !== 3 && i !== 7 && i !== 11){\r\n               result.push(array[i]);\r\n            }\r\n           } \r\n            if(i <= 11){\r\n                if (array[i] === array[i+4]){\r\n                    result.push(array[i]);\r\n                } \r\n            }\r\n        }\r\n        return (result.length === 0) ? true : false;\r\n    }\r\n    return false\r\n}\r\nexport {initGame, calculateScore, isLose, isWin};","export default __webpack_public_path__ + \"static/media/win.b64b2bab.mp3\";","export default __webpack_public_path__ + \"static/media/lose.ff6198f5.mp3\";","export default __webpack_public_path__ + \"static/media/keypress.f26ec9a9.mp3\";","import {UP, DOWN, LEFT, RIGHT, INIT_GAME, CHECK_WIN,\n     CHECK_LOSE, CHECK_SCORE, LOAD_LAST_GAME, RESET_BEST_SCORE,\n     MUTE_SOUND, FULLSCREEN} from '../actions/actionType'\nimport {sum, rotate, makeLines, checkPossibleMove, putRandomNumber} from './arrayTransformation'\nimport {initGame, isWin, isLose, calculateScore} from './gameLogic'\n\nimport winSound from \"../../assets/sounds/win.mp3\";\nimport loseSound from \"../../assets/sounds/lose.mp3\";\nimport moveSound from \"../../assets/sounds/keypress.mp3\";\n\nconst winGame = new Audio(winSound),\n    loseGame = new Audio(loseSound),\n    moveGame = new Audio(moveSound);\n\nconst initialState = {\n    tiles : [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n    currentScore : 0,\n    bestScore : 0,\n    moves : 0,\n    win : false,\n    lose : false,\n    top10 : [],\n    gameStop: false,\n    muted : false,\n};\n\n\nconst fieldReducer = (state = initialState, action) => {\n    const tiles = state.tiles;\n    let moves = state.moves;\n    const arr = [].concat(tiles);\n    const arrLined = makeLines(arr);\n    const bestScore = state.bestScore;\n    \n    switch(action.type) {\n        case UP: {\n            const num = action.payload,\n                back = 4 - num,\n                swappedArr = rotate(arrLined, num),\n                summedArr = sum(swappedArr);\n            let result = rotate(summedArr, back).flat(1);\n            if (checkPossibleMove(arr, result) && !state.gameStop){\n                result = putRandomNumber(result);\n                moves += 1;\n                if (!state.muted) moveGame.play();\n            return {...state, tiles : result, moves : moves}\n            }\n        return {...state};\n        };\n        case DOWN: {\n            const num = action.payload,\n                back = 4 - num,\n                swappedArr = rotate(arrLined, num),\n                summedArr = sum(swappedArr);\n            let result = rotate(summedArr, back).flat(1);\n                if (checkPossibleMove(arr, result) && !state.gameStop){\n                    result = putRandomNumber(result);\n                    moves += 1;\n                    if (!state.muted) moveGame.play();\n                    return {...state, tiles : result, moves : moves}\n                }\n            return {...state};\n        };\n        case LEFT: {\n            const num = action.payload,\n                back = 4 - num,\n                swappedArr = rotate(arrLined, num),\n                summedArr = sum(swappedArr);\n            let result = rotate(summedArr, back).flat(1);\n                if (checkPossibleMove(arr, result) && !state.gameStop){\n                    result = putRandomNumber(result);\n                    moves += 1;\n                    if (!state.muted) moveGame.play();\n                    return {...state, tiles : result, moves : moves}\n                }\n            return {...state};\n                \n        };\n        case RIGHT: {\n            const summedArr = sum(arrLined);\n            let result = summedArr.flat(1);\n                if (checkPossibleMove(arr, result) && !state.gameStop){\n                    result = putRandomNumber(result);\n                    moves += 1;\n                    if (!state.muted) moveGame.play();\n                    return {...state, tiles : result, moves : moves}\n                }\n            return {...state};\n        };\n        case INIT_GAME: {\n            const result = initGame();\n            return {...state, tiles : result, moves: 0, currentScore : 0, win : false, lose : false, gameStop: false}\n        }\n\n        case CHECK_WIN: {\n            const wasWin = state.win;\n            const win = isWin(tiles);\n            const bestResults = state.top10;\n            if (win !== wasWin){\n               bestResults.push({score : state.currentScore, moves : state.moves});\n               if (!state.muted) winGame.play();\n            }\n             \n         return win ? {...state, win : win, gameStop : win, top10 : bestResults} : {...state};\n        }\n        case CHECK_LOSE: {\n            const lastLose = state.lose;\n            const lose = isLose(tiles);\n            const bestResults = state.top10;\n            if (lose !== lastLose){\n               bestResults.push({score : state.currentScore, moves : state.moves});\n               if (!state.muted) loseGame.play();\n            } \n            return lose ? {...state, lose : lose, gameStop : lose, top10 : bestResults} : {...state};\n        }\n        case CHECK_SCORE: {\n            const currentScore = calculateScore(tiles);\n            return currentScore > bestScore ? {...state, currentScore, bestScore : currentScore} : {...state, currentScore};\n        }\n        case LOAD_LAST_GAME: {\n            const loadedState = JSON.parse(localStorage.getItem('lastState'));\n            return (loadedState !== null) ? {...state, ...loadedState} : state;\n        }\n        case RESET_BEST_SCORE: {\n            const bestScore = 0;\n            const top10 = [];\n            return {...state, top10 : top10, bestScore : bestScore};\n        }\n        case MUTE_SOUND: {\n            const isMuted = !state.muted;\n            return {...state, muted : isMuted}\n        }\n        default:\n            return state;\n\n    }\n};\n\n\nexport default fieldReducer;","import {SETTINGS, SHOW_SCORE} from '../actions/actionType'\n\nconst initialState = {\n    settingsIsOpen : false,\n    score : false,\n};\n\nconst buttonsReducer = (state = initialState, action) => {\n    switch(action.type){\n        case SETTINGS: {\n            const modal = !state.settingsIsOpen;\n            return {...state, settingsIsOpen : modal}\n        }\n            case SHOW_SCORE: {\n            const score = !state.score;\n        return {...state, score : score}\n        }\n        default: return state;\n    }\n}\nexport default buttonsReducer;","import {combineReducers} from 'redux';\nimport fieldReducer from './fieldReducer';\nimport buttonsReducer from './buttonsReducer'\n\n\nconst reducers = combineReducers({\n    field : fieldReducer,\n    buttons : buttonsReducer\n})\n\nexport default reducers;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport './Tile.css'\nexport default function Tile(props){\nreturn(\n    <div className={`tile tile-${props.value}`}>\n    {props.value}\n    </div>\n    )\n}","import {UP, DOWN, LEFT, RIGHT, INIT_GAME, CHECK_LOSE, CHECK_SCORE,\n     CHECK_WIN, LOAD_LAST_GAME, SETTINGS, MUTE_SOUND, SHOW_SCORE,\n     RESET_BEST_SCORE, FULLSCREEN} from './actionType'\n\nfunction moveUp(){\n    return {\n        type: UP,\n        payload: 1\n    };\n};\nfunction moveDown(){\n    return {\n        type: DOWN,\n        payload : 3\n    };\n};\n\nfunction moveLeft(){\n    return {\n        type: LEFT,\n        payload : 2\n    };\n};\n\nfunction moveRight(){\n    return {\n        type: RIGHT,\n        payload : 4\n    };\n};\n\nfunction initGame(){\n    return {\n        type: INIT_GAME,\n    };\n}\n\nfunction checkForLose(){\n    return {\n        type: CHECK_LOSE,\n    };\n}\n\nfunction checkForWin(){\n    return {\n        type: CHECK_WIN,\n    };\n}\n\nfunction calcScore(){\n    return {\n        type: CHECK_SCORE,\n    };\n}\n\nfunction loadGame(){\n    return {\n        type: LOAD_LAST_GAME,\n    }\n}\n\nfunction settings(){\n    return {\n        type: SETTINGS,\n    }\n}\n\nfunction mute(){\n    return {\n        type: MUTE_SOUND,\n    }\n}\n\nfunction leaderBoard(){\n    return {\n        type: SHOW_SCORE,\n    }\n}\n\nfunction resetScore(){\n    return {\n        type: RESET_BEST_SCORE,\n    }\n}\n\nfunction fullscreen(){\n    return {\n        type: FULLSCREEN,\n    }\n}\n\nexport  {moveUp, moveDown, moveLeft, moveRight, initGame, checkForLose,\n     checkForWin, calcScore, loadGame, settings, mute, leaderBoard,\n     resetScore};\n","import React, {useEffect} from 'react';\nimport './Field.css';\nimport Tile from '../tile/Tile'\nimport {makeLines} from '../../redux/reducers/arrayTransformation'\nimport {connect} from 'react-redux'\nimport {moveUp, moveDown, moveLeft, moveRight, initGame, loadGame} from '../../redux/actions/actionCreators'\nimport { FULLSCREEN } from '../../redux/actions/actionType';\n\n\nfunction Field(props){\n  const fullscreen = (element) => {\n    if(element.requestFullScreen) {\n      element.requestFullScreen();\n    } else if(element.mozRequestFullScreen) {\n      element.mozRequestFullScreen();\n    } else if(element.webkitRequestFullScreen) {\n      element.webkitRequestFullScreen();\n    }\n  }\n    useEffect(()=>{\n        document.addEventListener('keydown', (e) => {eventHandler(e);\n        });\n        return ()=>{\n          document.removeEventListener('keydown', (e) => {eventHandler(e);\n          });\n        }\n    },[]);\n    useEffect(()=>{\n          props.loadGame()\n        },[]);\n    useEffect(()=>{\n      saveGame(props)\n    },[props]);\n    const eventHandler = (event) => {\n        switch (event.keyCode) {\n            case 37 :\n                (props.moveLeft());\n                break;\n            case 65 :\n                (props.moveLeft());\n                break;    \n              case 38:\n                (props.moveUp());\n                break;\n              case 87:\n                (props.moveUp());\n                break;  \n              case 39:\n                (props.moveRight());\n                break;\n              case 68:\n                (props.moveRight());\n                break;  \n              case 40:\n                (props.moveDown());\n                break;\n              case 83:\n                (props.moveDown());\n                break;  \n              case 82:\n                (props.initGame());\n                break;\n              case 70:\n                const elem = document.getElementById('app');\n                fullscreen(elem);\n                break;\n              default: break;\n        }\n    }\n\n    const saveGame = (state) => {\n      const currentState = JSON.stringify(state);\n      localStorage.setItem('lastState', currentState);\n    };\n\n    if (props.lose){\n      return (\n        <div className='endScreen' id='loseScreen'>\n          <p>Game over! =(</p>\n          <p>You reached {props.currentScore} in {props.moves} steps</p>\n        </div>\n      )\n    }\n    if (props.win){\n      return (\n        <div className='endScreen' id='winScreen'>\n          <p>Congratulations!</p>\n          <p>You win the game with {props.currentScore} score in {props.moves} steps!</p>\n        </div>\n      )\n    }\n    if (!props.win && !props.lose){\n    return(\n        <div id='field'>\n            {\n            makeLines(props.tiles).map((tiles,lineIndex) => {\n                    return (\n                        <div key={lineIndex} className='tileLine'>\n                           {tiles.map((tile, index) => {\n                                return <Tile key={lineIndex*4 + index} value={tile} />\n                                })} \n                        </div>\n                    )\n                })\n            }\n        </div>\n        )}\n}\n\nconst mapStateToProps = state => {\n     return {...state.field, muted : state.field.muted}\n    };\n\nconst mapDispatchToProps = {\n    moveUp, moveDown, moveLeft, moveRight, initGame, loadGame,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Field)","import React from 'react';\nimport { connect } from 'react-redux';\nimport './buttons.css'\nimport {initGame, settings, mute, leaderBoard, resetScore} from '../../redux/actions/actionCreators'\n\nfunction Buttons(props){\n    function sort(arr){\n        let newArr = arr.sort((a, b) => {return (b.score - a.score)});\n        return newArr.slice(0, 10);\n    }\n    return (\n        <div id='btns'>\n            <button type='button' onClick={props.initGame}>New game</button>\n            <button type='button' onClick={props.settings}>Settings</button>\n            <p id='rules'>Use <strong>arrows</strong> or <strong>WASD</strong> to move, <strong>R</strong> - new game, <strong>F</strong> - fullscreen</p>\n            {props.modal && (\n            <div id='settings'>\n            <button type='button' className='set' onClick={props.leaderBoard}>Show best scores</button>\n            <button type='button' className='set' onClick={props.resetScore}>Reset statistics</button>\n            <button type='button>' className='set' onClick={props.mute}>Sound on/off</button>\n            <button type='button' className='set' onClick={props.settings}>Close settings</button>\n            </div>\n            )}\n            {props.score && (<div id='leaderBoard'>\n                    <button type='button' className=\"closeSetts\" onClick={props.leaderBoard}>&times;</button>\n                    {sort(props.top10).map((record, index) => {\n                    return <p className='top' key={index}>{index + 1}. {record.score} points in {record.moves} steps</p>})}\n                    </div>\n            )}\n        </div>\n        \n    )\n}\n\nconst mapStateToProps = state => {\n    return {modal : state.buttons.settingsIsOpen,\n            muted: state.buttons.muted,\n            score : state.buttons.score,\n            top10 : state.field.top10};\n}\n\nconst mapDispatchToProps = {\n    initGame, settings, mute, leaderBoard, resetScore\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Buttons);","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport './stat.css'\nimport {checkForLose, checkForWin, calcScore} from '../../redux/actions/actionCreators'\n\n\nfunction Stat(props){\n    useEffect(()=>{\n        props.checkForWin();\n        props.checkForLose();\n        props.calcScore();  \n        }, [props]\n        )\n    return(\n        <div id='stat'>\n            <section id='score'>\n                Score: {props.currentScore}\n            </section>\n            <section id='moves'>\n                Steps: {props.moves}\n            </section>\n            <section id='bestScore'>\n                Best score: {props.bestScore}\n            </section>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {currentScore : state.field.currentScore,\n        bestScore : state.field.bestScore,\n        moves : state.field.moves,\n        }\n};\nconst mapDispatchToProps = {\n    checkForLose, checkForWin, calcScore\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Stat)","export default __webpack_public_path__ + \"static/media/rs_school_js.ad178c0d.svg\";","import React from 'react';\nimport './footer.css'\nimport logo from '../../assets/images/rs_school_js.svg'\n\nexport default function Footer(){\n    return(\n    <footer>\n    <div id=\"information\">\n      <div id=\"school\">\n          <a href=\"https://rs.school/js/\" id='rsLink'><img src={logo} alt=\"RSSchoolLogo\" /></a>\n        </div>\n      <p id='me'>Made by <a href=\"https://github.com/Elwa36s\">Elwa36s,</a><br />2021</p>\n    </div>\n  </footer>\n    )\n}","import React from 'react';\nimport Field from '../field/Field';\nimport Buttons from '../buttons/buttons';\nimport Stat from '../stat/stat';\nimport Footer from '../footer/footer'\nimport './app.css'\n\nconst App = () => {\n    return(\n        <div id='app'>\n        <Buttons />\n        <Stat />\n        <Field />\n        <Footer />\n        </div>\n    )\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport gameReducers from './redux/reducers/reducer'\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport App from './components/app/app'\nimport { compose } from 'redux';\n\nconst store = createStore(gameReducers, compose(\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  ))\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}